apply plugin: 'com.android.application'
apply plugin: 'android-apt'
android {
    signingConfigs {
        try {
            release {
                keyAlias 'liangrenwang'
                keyPassword KEY_PASSWORD
                storeFile file('key/liangrenwang.jks')
                storePassword KEYSTORE_PASSWORD
            }
        }catch (ex) {
            throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
        }
    }
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    defaultConfig {
        applicationId "com.example.yuanzheng.preparedemo"
        minSdkVersion 10
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.release
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            zipAlignEnabled false
            signingConfig signingConfigs.release
        }
        applicationVariants.all { variant ->
            def newName = "liangren_" + defaultConfig.versionName + "(" + defaultConfig.versionCode + ").apk";
            variant.outputs.each { output ->
                def alignedOutputFile = output.outputFile
                def unalignedOutputFile = output.packageApplication.outputFile

                // Customise APK filenames (to include build version)
                if (variant.buildType.zipAlignEnabled) {
                    // normal APK
                    output.outputFile = new File(alignedOutputFile.parent, newName)
                }
                // 'unaligned' APK
                output.packageApplication.outputFile = new File(unalignedOutputFile.parent, newName.replace(".apk", "-unaligned.apk"))
            }
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false

    }
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    apt "org.androidannotations:androidannotations:3.0.1"
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:support-v4:23.0.1'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'org.androidannotations:androidannotations-api:3.0.1'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.afollestad.material-dialogs:core:0.8.2.0'
    compile 'com.afollestad.material-dialogs:commons:0.8.2.0'
    compile 'com.android.support:recyclerview-v7:23.0.1'
    compile 'com.android.support:design:23.0.1'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.5.0'
}
